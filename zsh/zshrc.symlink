# Uncomment to enable profiling, then view results with `zprof`
# zmodload zsh/zprof

# shortcut to this dotfiles path is $ZSH
export ZSH=$HOME/.dotfiles

# your project folder that we can `c [tab]` to
export PROJECTS=~/Development

# Before we do any fancy globbing, be sure extendedglob is enabled
setopt extendedglob

# `brew install zsh-syntax-highlighting`
# https://github.com/zsh-users/zsh-syntax-highlighting
source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets)
ZSH_HIGHLIGHT_STYLES[globbing]='fg=cyan'

# `brew install zsh-autosuggestions`
# https://github.com/zsh-users/zsh-autosuggestions
source /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh

# source every .zsh file in this rep
for config_file ($ZSH/**/*.zsh~*/backups/*) source $config_file

# use .localrc for SUPER SECRET CRAP that you don't
# want in your public, versioned repo.
if [[ -a ~/.localrc ]]; then
  source ~/.localrc
fi

# initialize autocomplete here, otherwise functions won't be loaded
# On slow systems, checking the cached .zcompdump file to see if it must be 
# regenerated adds a noticable delay to zsh startup.  This little hack restricts 
# it to once a day.  It should be pasted into your own completion file.
#
# The globbing is a little complicated here:
# - '#q' is an explicit glob qualifier that makes globbing work within zsh's [[ ]] construct.
# - 'N' makes the glob pattern evaluate to nothing when it doesn't match (rather than throw a globbing error)
# - '.' matches "regular files"
# - 'mh+24' matches files (or directories or whatever) that are older than 24 hours.
autoload -Uz compinit 
if [[ -n ${ZDOTDIR}/.zcompdump(#qN.mh+24) ]]; then
	compinit;
else
	compinit -C;
fi;

# Automatically escape URL characters while typing (does not fix history or paste)
# autoload -U url-quote-magic
# zle -N self-insert url-quote-magic

# load every completion after autocomplete loads
for config_file ($ZSH/**/completion.sh~*/backups/*) source $config_file

# Python Development Environment. - Must run last after all paths are setup.
if [ -f /usr/local/share/python/virtualenvwrapper.sh ]; then
    source /usr/local/share/python/virtualenvwrapper.sh
fi

# Z hopping around folders
if [ -f /usr/local/etc/profile.d/z.sh ]; then
    source /usr/local/etc/profile.d/z.sh
fi

export TIMEFMT="%U user %S system %P cpu %*E total, running %J"
REPORTTIME=5

eval `/usr/libexec/path_helper -s`

### Added by the Heroku Toolbelt
# export PATH="/usr/local/heroku/bin:$PATH"

# source every .path file in this rep -- path updates should come last
for config_file ($ZSH/**/*.path~*/backups/*) source $config_file

# Ruby Development Environment.
export RBENV_ROOT=/usr/local/opt/rbenv
if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

# Finally, set up stderr redirection through colorize to make it red
#exec 2>>(colorize `tput bold; tput setaf 1` `tput sgr0` > /dev/tty &)

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

[ -d /usr/local/opt/curl-openssl/bin ] && export PATH="/usr/local/opt/curl-openssl/bin:$PATH"
